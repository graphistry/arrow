{"version":3,"sources":["fb/Schema.ts"],"names":[],"mappings":"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","file":"Schema.js","sourcesContent":["/* tslint:disable:class-name */\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum MetadataVersion {\n    /**\n     * 0.1.0\n     */\n    V1 = 0,\n\n    /**\n     * 0.2.0\n     */\n    V2 = 1,\n\n    /**\n     * 0.3.0 -> 0.7.1\n     */\n    V3 = 2,\n\n    /**\n     * >= 0.8.0\n     */\n    V4 = 3\n  }\n}\n\n/**\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum UnionMode {\n    Sparse = 0,\n    Dense = 1\n  }\n}\n\n/**\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum Precision {\n    HALF = 0,\n    SINGLE = 1,\n    DOUBLE = 2\n  }\n}\n\n/**\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum DateUnit {\n    DAY = 0,\n    MILLISECOND = 1\n  }\n}\n\n/**\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum TimeUnit {\n    SECOND = 0,\n    MILLISECOND = 1,\n    MICROSECOND = 2,\n    NANOSECOND = 3\n  }\n}\n\n/**\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum IntervalUnit {\n    YEAR_MONTH = 0,\n    DAY_TIME = 1\n  }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum Type {\n    NONE = 0,\n    Null = 1,\n    Int = 2,\n    FloatingPoint = 3,\n    Binary = 4,\n    Utf8 = 5,\n    Bool = 6,\n    Decimal = 7,\n    Date = 8,\n    Time = 9,\n    Timestamp = 10,\n    Interval = 11,\n    List = 12,\n    Struct_ = 13,\n    Union = 14,\n    FixedSizeBinary = 15,\n    FixedSizeList = 16,\n    Map = 17\n  }\n}\n\n/**\n * ----------------------------------------------------------------------\n * The possible types of a vector\n *\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum VectorType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum\n */\nexport namespace org.apache.arrow.flatbuf {\n  export enum Endianness {\n    Little = 0,\n    Big = 1\n  }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Null {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Null}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Null=} obj\n     * @returns {Null}\n     */\n    static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n      return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startNull(builder: flatbuffers.Builder) {\n      builder.startObject(0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Struct_ {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Struct_}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Struct_=} obj\n     * @returns {Struct_}\n     */\n    static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n      return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startStruct_(builder: flatbuffers.Builder) {\n      builder.startObject(0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class List {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {List}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): List {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {List=} obj\n     * @returns {List}\n     */\n    static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n      return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startList(builder: flatbuffers.Builder) {\n      builder.startObject(0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class FixedSizeList {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {FixedSizeList}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {FixedSizeList=} obj\n     * @returns {FixedSizeList}\n     */\n    static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n      return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Number of list items per value\n     *\n     * @returns {number}\n     */\n    listSize(): number {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startFixedSizeList(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} listSize\n     */\n    static addListSize(builder: flatbuffers.Builder, listSize: number) {\n      builder.addFieldInt32(0, listSize, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Map {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Map}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Map=} obj\n     * @returns {Map}\n     */\n    static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n      return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Set to true if the keys within each value are sorted\n     *\n     * @returns {boolean}\n     */\n    keysSorted(): boolean {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startMap(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {boolean} keysSorted\n     */\n    static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n      builder.addFieldInt8(0, +keysSorted, +false);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Union {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Union}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Union=} obj\n     * @returns {Union}\n     */\n    static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n      return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.UnionMode}\n     */\n    mode(): org.apache.arrow.flatbuf.UnionMode {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.UnionMode} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n    }\n\n    /**\n     * @param {number} index\n     * @returns {number}\n     */\n    typeIds(index: number): number | null {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns {number}\n     */\n    typeIdsLength(): number {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns {Int32Array}\n     */\n    typeIdsArray(): Int32Array | null {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startUnion(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.UnionMode} mode\n     */\n    static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n      builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} typeIdsOffset\n     */\n    static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, typeIdsOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {Array.<number>} data\n     * @returns {flatbuffers.Offset}\n     */\n    static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} numElems\n     */\n    static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Int {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Int}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Int=} obj\n     * @returns {Int}\n     */\n    static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n      return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {number}\n     */\n    bitWidth(): number {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSigned(): boolean {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startInt(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} bitWidth\n     */\n    static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n      builder.addFieldInt32(0, bitWidth, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {boolean} isSigned\n     */\n    static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n      builder.addFieldInt8(1, +isSigned, +false);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class FloatingPoint {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {FloatingPoint}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {FloatingPoint=} obj\n     * @returns {FloatingPoint}\n     */\n    static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n      return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.Precision}\n     */\n    precision(): org.apache.arrow.flatbuf.Precision {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.Precision} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startFloatingPoint(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.Precision} precision\n     */\n    static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n      builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Utf8 {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Utf8}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Utf8=} obj\n     * @returns {Utf8}\n     */\n    static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n      return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startUtf8(builder: flatbuffers.Builder) {\n      builder.startObject(0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Binary {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Binary}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Binary=} obj\n     * @returns {Binary}\n     */\n    static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n      return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startBinary(builder: flatbuffers.Builder) {\n      builder.startObject(0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class FixedSizeBinary {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {FixedSizeBinary}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {FixedSizeBinary=} obj\n     * @returns {FixedSizeBinary}\n     */\n    static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n      return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Number of bytes per value\n     *\n     * @returns {number}\n     */\n    byteWidth(): number {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startFixedSizeBinary(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} byteWidth\n     */\n    static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n      builder.addFieldInt32(0, byteWidth, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Bool {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Bool}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Bool=} obj\n     * @returns {Bool}\n     */\n    static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n      return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startBool(builder: flatbuffers.Builder) {\n      builder.startObject(0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Decimal {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Decimal}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Decimal=} obj\n     * @returns {Decimal}\n     */\n    static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n      return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * Total number of decimal digits\n     *\n     * @returns {number}\n     */\n    precision(): number {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * Number of digits after the decimal point \".\"\n     *\n     * @returns {number}\n     */\n    scale(): number {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startDecimal(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} precision\n     */\n    static addPrecision(builder: flatbuffers.Builder, precision: number) {\n      builder.addFieldInt32(0, precision, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} scale\n     */\n    static addScale(builder: flatbuffers.Builder, scale: number) {\n      builder.addFieldInt32(1, scale, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Date {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Date}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Date=} obj\n     * @returns {Date}\n     */\n    static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n      return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.DateUnit}\n     */\n    unit(): org.apache.arrow.flatbuf.DateUnit {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.DateUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startDate(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.DateUnit} unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n      builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Time {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Time}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Time=} obj\n     * @returns {Time}\n     */\n    static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n      return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.TimeUnit}\n     */\n    unit(): org.apache.arrow.flatbuf.TimeUnit {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.TimeUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n    }\n\n    /**\n     * @returns {number}\n     */\n    bitWidth(): number {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startTime(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.TimeUnit} unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n      builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} bitWidth\n     */\n    static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n      builder.addFieldInt32(1, bitWidth, 32);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Timestamp {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Timestamp}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Timestamp=} obj\n     * @returns {Timestamp}\n     */\n    static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n      return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.TimeUnit}\n     */\n    unit(): org.apache.arrow.flatbuf.TimeUnit {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.TimeUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n    }\n\n    /**\n     * The time zone is a string indicating the name of a time zone, one of:\n     *\n     * * As used in the Olson time zone database (the \"tz database\" or\n     *   \"tzdata\"), such as \"America/New_York\"\n     * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n     *\n     * Whether a timezone string is present indicates different semantics about\n     * the data:\n     *\n     * * If the time zone is null or equal to an empty string, the data is \"time\n     *   zone naive\" and shall be displayed *as is* to the user, not localized\n     *   to the locale of the user. This data can be though of as UTC but\n     *   without having \"UTC\" as the time zone, it is not considered to be\n     *   localized to any time zone\n     *\n     * * If the time zone is set to a valid value, values can be displayed as\n     *   \"localized\" to that time zone, even though the underlying 64-bit\n     *   integers are identical to the same data stored in UTC. Converting\n     *   between time zones is a metadata-only operation and does not change the\n     *   underlying values\n     *\n     * @param {flatbuffers.Encoding=} optionalEncoding\n     * @returns {string|Uint8Array|null}\n     */\n    timezone(): string | null;\n    timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    timezone(optionalEncoding?: any): string | Uint8Array | null {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startTimestamp(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.TimeUnit} unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n      builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} timezoneOffset\n     */\n    static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, timezoneOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Interval {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Interval}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Interval=} obj\n     * @returns {Interval}\n     */\n    static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n      return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.IntervalUnit}\n     */\n    unit(): org.apache.arrow.flatbuf.IntervalUnit {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.IntervalUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startInterval(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.IntervalUnit} unit\n     */\n    static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n      builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * ----------------------------------------------------------------------\n * represents the physical layout of a buffer\n * buffers have fixed width slots of a given type\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class VectorLayout {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {VectorLayout}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): VectorLayout {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {VectorLayout=} obj\n     * @returns {VectorLayout}\n     */\n    static getRootAsVectorLayout(bb: flatbuffers.ByteBuffer, obj?: VectorLayout): VectorLayout {\n      return (obj || new VectorLayout).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * the width of a slot in the buffer (typically 1, 8, 16, 32 or 64)\n     *\n     * @returns {number}\n     */\n    bitWidth(): number {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * the purpose of the vector\n     *\n     * @returns {org.apache.arrow.flatbuf.VectorType}\n     */\n    type(): org.apache.arrow.flatbuf.VectorType {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? /** @type {org.apache.arrow.flatbuf.VectorType} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.VectorType.OFFSET;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startVectorLayout(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} bitWidth\n     */\n    static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n      builder.addFieldInt16(0, bitWidth, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.VectorType} type\n     */\n    static addType(builder: flatbuffers.Builder, type: org.apache.arrow.flatbuf.VectorType) {\n      builder.addFieldInt16(1, type, org.apache.arrow.flatbuf.VectorType.OFFSET);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endVectorLayout(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class KeyValue {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {KeyValue}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {KeyValue=} obj\n     * @returns {KeyValue}\n     */\n    static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n      return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Encoding=} optionalEncoding\n     * @returns {string|Uint8Array|null}\n     */\n    key(): string | null;\n    key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    key(optionalEncoding?: any): string | Uint8Array | null {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param {flatbuffers.Encoding=} optionalEncoding\n     * @returns {string|Uint8Array|null}\n     */\n    value(): string | null;\n    value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    value(optionalEncoding?: any): string | Uint8Array | null {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startKeyValue(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} keyOffset\n     */\n    static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, keyOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class DictionaryEncoding {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {DictionaryEncoding}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {DictionaryEncoding=} obj\n     * @returns {DictionaryEncoding}\n     */\n    static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n      return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * The known dictionary id in the application where this data is used. In\n     * the file or streaming formats, the dictionary ids are found in the\n     * DictionaryBatch messages\n     *\n     * @returns {flatbuffers.Long}\n     */\n    id(): flatbuffers.Long {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n\n    /**\n     * The dictionary indices are constrained to be positive integers. If this\n     * field is null, the indices must be signed int32\n     *\n     * @param {org.apache.arrow.flatbuf.Int=} obj\n     * @returns {org.apache.arrow.flatbuf.Int|null}\n     */\n    indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n\n    /**\n     * By default, dictionaries are not ordered, or the order does not have\n     * semantic meaning. In some statistical, applications, dictionary-encoding\n     * is used to represent ordered categorical data, and we provide a way to\n     * preserve that metadata here\n     *\n     * @returns {boolean}\n     */\n    isOrdered(): boolean {\n      let offset = this.bb.__offset(this.bb_pos, 8);\n      return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startDictionaryEncoding(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Long} id\n     */\n    static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n      builder.addFieldInt64(0, id, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} indexTypeOffset\n     */\n    static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indexTypeOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {boolean} isOrdered\n     */\n    static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n      builder.addFieldInt8(2, +isOrdered, +false);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * - children is only for nested Arrow arrays\n * - For primitive types, children will have length 0\n * - nullable should default to true in general\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Field {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Field}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Field=} obj\n     * @returns {Field}\n     */\n    static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n      return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param {flatbuffers.Encoding=} optionalEncoding\n     * @returns {string|Uint8Array|null}\n     */\n    name(): string | null;\n    name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n    name(optionalEncoding?: any): string | Uint8Array | null {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    nullable(): boolean {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n\n    /**\n     * @returns {org.apache.arrow.flatbuf.Type}\n     */\n    typeType(): org.apache.arrow.flatbuf.Type {\n      let offset = this.bb.__offset(this.bb_pos, 8);\n      return offset ? /** @type {org.apache.arrow.flatbuf.Type} */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n    }\n\n    /**\n     * @param {flatbuffers.Table} obj\n     * @returns {?flatbuffers.Table}\n     */\n    type<T extends flatbuffers.Table>(obj: T): T | null {\n      let offset = this.bb.__offset(this.bb_pos, 10);\n      return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param {org.apache.arrow.flatbuf.DictionaryEncoding=} obj\n     * @returns {org.apache.arrow.flatbuf.DictionaryEncoding|null}\n     */\n    dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n      let offset = this.bb.__offset(this.bb_pos, 12);\n      return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n\n    /**\n     * @param {number} index\n     * @param {org.apache.arrow.flatbuf.Field=} obj\n     * @returns {org.apache.arrow.flatbuf.Field}\n     */\n    children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n      let offset = this.bb.__offset(this.bb_pos, 14);\n      return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n\n    /**\n     * @returns {number}\n     */\n    childrenLength(): number {\n      let offset = this.bb.__offset(this.bb_pos, 14);\n      return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * layout of buffers produced for this type (as derived from the Type)\n     * does not include children\n     * each recordbatch will return instances of those Buffers.\n     *\n     * @param {number} index\n     * @param {org.apache.arrow.flatbuf.VectorLayout=} obj\n     * @returns {org.apache.arrow.flatbuf.VectorLayout}\n     */\n    layout(index: number, obj?: org.apache.arrow.flatbuf.VectorLayout): org.apache.arrow.flatbuf.VectorLayout | null {\n      let offset = this.bb.__offset(this.bb_pos, 16);\n      return offset ? (obj || new org.apache.arrow.flatbuf.VectorLayout).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n\n    /**\n     * @returns {number}\n     */\n    layoutLength(): number {\n      let offset = this.bb.__offset(this.bb_pos, 16);\n      return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {number} index\n     * @param {org.apache.arrow.flatbuf.KeyValue=} obj\n     * @returns {org.apache.arrow.flatbuf.KeyValue}\n     */\n    customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n      let offset = this.bb.__offset(this.bb_pos, 18);\n      return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n\n    /**\n     * @returns {number}\n     */\n    customMetadataLength(): number {\n      let offset = this.bb.__offset(this.bb_pos, 18);\n      return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startField(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {boolean} nullable\n     */\n    static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n      builder.addFieldInt8(1, +nullable, +false);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.Type} typeType\n     */\n    static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n      builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, typeOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} dictionaryOffset\n     */\n    static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, dictionaryOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} childrenOffset\n     */\n    static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, childrenOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {Array.<flatbuffers.Offset>} data\n     * @returns {flatbuffers.Offset}\n     */\n    static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} numElems\n     */\n    static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} layoutOffset\n     */\n    static addLayout(builder: flatbuffers.Builder, layoutOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, layoutOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {Array.<flatbuffers.Offset>} data\n     * @returns {flatbuffers.Offset}\n     */\n    static createLayoutVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} numElems\n     */\n    static startLayoutVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} customMetadataOffset\n     */\n    static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, customMetadataOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {Array.<flatbuffers.Offset>} data\n     * @returns {flatbuffers.Offset}\n     */\n    static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} numElems\n     */\n    static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n  }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Buffer {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Buffer}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * The relative offset into the shared memory page where the bytes for this\n     * buffer starts\n     *\n     * @returns {flatbuffers.Long}\n     */\n    offset(): flatbuffers.Long {\n      return this.bb.readInt64(this.bb_pos);\n    }\n\n    /**\n     * The absolute length (in bytes) of the memory buffer. The memory is found\n     * from offset (inclusive) to offset + length (non-inclusive).\n     *\n     * @returns {flatbuffers.Long}\n     */\n    length(): flatbuffers.Long {\n      return this.bb.readInt64(this.bb_pos + 8);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Long} offset\n     * @param {flatbuffers.Long} length\n     * @returns {flatbuffers.Offset}\n     */\n    static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n      builder.prep(8, 16);\n      builder.writeInt64(length);\n      builder.writeInt64(offset);\n      return builder.offset();\n    }\n\n  }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n  export class Schema {\n    /**\n     * @type {flatbuffers.ByteBuffer}\n     */\n    // @ts-ignore\n    bb: flatbuffers.ByteBuffer;\n\n    /**\n     * @type {number}\n     */\n    bb_pos: number = 0;\n    /**\n     * @param {number} i\n     * @param {flatbuffers.ByteBuffer} bb\n     * @returns {Schema}\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param {flatbuffers.ByteBuffer} bb\n     * @param {Schema=} obj\n     * @returns {Schema}\n     */\n    static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n      return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * endianness of the buffer\n     * it is Little Endian by default\n     * if endianness doesn't match the underlying system then the vectors need to be converted\n     *\n     * @returns {org.apache.arrow.flatbuf.Endianness}\n     */\n    endianness(): org.apache.arrow.flatbuf.Endianness {\n      let offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? /** @type {org.apache.arrow.flatbuf.Endianness} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n    }\n\n    /**\n     * @param {number} index\n     * @param {org.apache.arrow.flatbuf.Field=} obj\n     * @returns {org.apache.arrow.flatbuf.Field}\n     */\n    fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n\n    /**\n     * @returns {number}\n     */\n    fieldsLength(): number {\n      let offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {number} index\n     * @param {org.apache.arrow.flatbuf.KeyValue=} obj\n     * @returns {org.apache.arrow.flatbuf.KeyValue}\n     */\n    customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n      let offset = this.bb.__offset(this.bb_pos, 8);\n      return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n\n    /**\n     * @returns {number}\n     */\n    customMetadataLength(): number {\n      let offset = this.bb.__offset(this.bb_pos, 8);\n      return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     */\n    static startSchema(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {org.apache.arrow.flatbuf.Endianness} endianness\n     */\n    static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n      builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} fieldsOffset\n     */\n    static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, fieldsOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {Array.<flatbuffers.Offset>} data\n     * @returns {flatbuffers.Offset}\n     */\n    static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} numElems\n     */\n    static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} customMetadataOffset\n     */\n    static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, customMetadataOffset, 0);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {Array.<flatbuffers.Offset>} data\n     * @returns {flatbuffers.Offset}\n     */\n    static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {number} numElems\n     */\n    static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @returns {flatbuffers.Offset}\n     */\n    static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param {flatbuffers.Builder} builder\n     * @param {flatbuffers.Offset} offset\n     */\n    static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset);\n    }\n\n  }\n}\n"]}