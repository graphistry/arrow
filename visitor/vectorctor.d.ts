import { Data } from '../data';
import { Type } from '../enum';
import { DataType } from '../type';
import { Visitor } from '../visitor';
import * as vecs from '../vector/all';
import { Vector, VectorCtor } from '../interfaces';
export interface GetVectorConstructor extends Visitor {
    visitMany<T extends Type>(nodes: T[]): VectorCtor<T>[];
    visit<T extends Type>(node: T): VectorCtor<T>;
    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;
    getVisitFn<T extends DataType>(node: Vector<T>): () => VectorCtor<T>;
    getVisitFn<T extends DataType>(node: Data<T>): () => VectorCtor<T>;
    getVisitFn<T extends DataType>(node: T): () => VectorCtor<T>;
}
export declare class GetVectorConstructor extends Visitor {
    visitNull(): typeof vecs.NullVector;
    visitBool(): typeof vecs.BoolVector;
    visitInt(): typeof vecs.IntVector;
    visitInt8(): typeof vecs.Int8Vector;
    visitInt16(): typeof vecs.Int16Vector;
    visitInt32(): typeof vecs.Int32Vector;
    visitInt64(): typeof vecs.Int64Vector;
    visitUint8(): typeof vecs.Uint8Vector;
    visitUint16(): typeof vecs.Uint16Vector;
    visitUint32(): typeof vecs.Uint32Vector;
    visitUint64(): typeof vecs.Uint64Vector;
    visitFloat(): typeof vecs.FloatVector;
    visitFloat16(): typeof vecs.Float16Vector;
    visitFloat32(): typeof vecs.Float32Vector;
    visitFloat64(): typeof vecs.Float64Vector;
    visitUtf8(): typeof vecs.Utf8Vector;
    visitBinary(): typeof vecs.BinaryVector;
    visitFixedSizeBinary(): typeof vecs.FixedSizeBinaryVector;
    visitDate(): typeof vecs.DateVector;
    visitDateDay(): typeof vecs.DateDayVector;
    visitDateMillisecond(): typeof vecs.DateMillisecondVector;
    visitTimestamp(): typeof vecs.TimestampVector;
    visitTimestampSecond(): typeof vecs.TimestampSecondVector;
    visitTimestampMillisecond(): typeof vecs.TimestampMillisecondVector;
    visitTimestampMicrosecond(): typeof vecs.TimestampMicrosecondVector;
    visitTimestampNanosecond(): typeof vecs.TimestampNanosecondVector;
    visitTime(): typeof vecs.TimeVector;
    visitTimeSecond(): typeof vecs.TimeSecondVector;
    visitTimeMillisecond(): typeof vecs.TimeMillisecondVector;
    visitTimeMicrosecond(): typeof vecs.TimeMicrosecondVector;
    visitTimeNanosecond(): typeof vecs.TimeNanosecondVector;
    visitDecimal(): typeof vecs.DecimalVector;
    visitList(): typeof vecs.ListVector;
    visitStruct(): typeof vecs.StructVector;
    visitUnion(): typeof vecs.UnionVector;
    visitDenseUnion(): typeof vecs.DenseUnionVector;
    visitSparseUnion(): typeof vecs.SparseUnionVector;
    visitDictionary(): typeof vecs.DictionaryVector;
    visitInterval(): typeof vecs.IntervalVector;
    visitIntervalDayTime(): typeof vecs.IntervalDayTimeVector;
    visitIntervalYearMonth(): typeof vecs.IntervalYearMonthVector;
    visitFixedSizeList(): typeof vecs.FixedSizeListVector;
    visitMap(): typeof vecs.MapVector;
}
export declare const instance: GetVectorConstructor;
