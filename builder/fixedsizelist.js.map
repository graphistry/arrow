{"version":3,"sources":["builder/fixedsizelist.ts"],"names":[],"mappings":";;AACA,iCAAuC;AAEvC,MAAa,oBAA4D,SAAQ,oBAAsC;IAAvH;;QACY,QAAG,GAAG,IAAI,OAAO,EAAY,CAAC;IAO1C,CAAC;IANU,UAAU,CAAC,KAAU,EAAE,MAAc;QACxC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,UAAU,CAAC,GAAU,EAAE,MAAM,CAAC,CAAC;QACrC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;IACtB,CAAC;CACJ;AARD,oDAQC;AAED,MAAM,OAAO;IAAb;QACW,WAAM,GAA0C,IAAI,CAAC;IAIhE,CAAC;IAHG,GAAG,CAAC,KAAa;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACnD,CAAC;CACJ","file":"fixedsizelist.js","sourcesContent":["import { DataType, FixedSizeList } from '../type';\nimport { NestedBuilder } from './base';\n\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends NestedBuilder<FixedSizeList<T>, TNull> {\n    private row = new RowLike<T, TNull>();\n    public writeValue(value: any, offset: number) {\n        const row = this.row;\n        row.values = value;\n        super.writeValue(row as any, offset);\n        row.values = null;\n    }\n}\n\nclass RowLike<T extends DataType = any, TNull = any> {\n    public values: null | ArrayLike<T['TValue'] | TNull> = null;\n    get(index: number) {\n        return this.values ? this.values[index] : null;\n    }\n}\n"]}