{"version":3,"sources":["vector/row.ts"],"names":[],"mappings":"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","file":"row.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { MapVector } from '../vector/map';\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { StructVector } from '../vector/struct';\n\n/** @ignore */ export const kLength = Symbol.for('length');\n/** @ignore */ export const kParent = Symbol.for('parent');\n/** @ignore */ export const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const columnDescriptor = { enumerable: true, configurable: false, get: null as any };\n/** @ignore */ const rowLengthDescriptor = { writable: false, enumerable: false, configurable: false, value: -1 };\n/** @ignore */ const rowParentDescriptor = { writable: false, enumerable: false, configurable: false, value: null as any };\n\nexport class Row<T extends { [key: string]: DataType }> implements Iterable<T[keyof T]['TValue']> {\n    [key: string]: T[keyof T]['TValue'];\n    // @ts-ignore\n    public [kParent]: MapVector<T> | StructVector<T>;\n    // @ts-ignore\n    public [kRowIndex]: number;\n    // @ts-ignore\n    public readonly [kLength]: number;\n    *[Symbol.iterator]() {\n        for (let i = -1, n = this[kLength]; ++i < n;) {\n            yield this[i];\n        }\n    }\n    public get<K extends keyof T>(key: K) { return (this as any)[key] as T[K]['TValue']; }\n    public toJSON(): any {\n        return DataType.isStruct(this[kParent].type) ? [...this] :\n            Object.getOwnPropertyNames(this).reduce((props: any, prop: string) => {\n                return (props[prop] = (this as any)[prop]) && props || props;\n            }, {});\n    }\n    public toString() {\n        return DataType.isStruct(this[kParent].type) ?\n            [...this].map((x) => valueToString(x)).join(', ') :\n            Object.getOwnPropertyNames(this).reduce((props: any, prop: string) => {\n                return (props[prop] = valueToString((this as any)[prop])) && props || props;\n            }, {});\n    }\n}\n\n/** @ignore */\nexport class RowProxyGenerator<T extends { [key: string]: DataType }> {\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType }>(parent: MapVector<T> | StructVector<T>, schemaOrFields: T | Field[], fieldsAreEnumerable = false): RowProxyGenerator<T> {\n        let schema: T, fields: Field[];\n        if (Array.isArray(schemaOrFields)) {\n            fields = schemaOrFields;\n        } else {\n            schema = schemaOrFields;\n            fieldsAreEnumerable = true;\n            fields = Object.keys(schema).map((x) => new Field(x, schema[x]));\n        }\n        return new RowProxyGenerator<T>(parent, fields, fieldsAreEnumerable);\n    }\n\n    private rowPrototype: Row<T>;\n\n    private constructor(parent: MapVector<T> | StructVector<T>, fields: Field[], fieldsAreEnumerable: boolean) {\n        const proto = Object.create(Row.prototype);\n\n        rowParentDescriptor.value = parent;\n        rowLengthDescriptor.value = fields.length;\n        Object.defineProperty(proto, kParent, rowParentDescriptor);\n        Object.defineProperty(proto, kLength, rowLengthDescriptor);\n        fields.forEach((field, columnIndex) => {\n            if (!proto.hasOwnProperty(field.name)) {\n                columnDescriptor.enumerable = fieldsAreEnumerable;\n                columnDescriptor.get || (columnDescriptor.get = this._bindGetter(columnIndex));\n                Object.defineProperty(proto, field.name, columnDescriptor);\n            }\n            if (!proto.hasOwnProperty(columnIndex)) {\n                columnDescriptor.enumerable = !fieldsAreEnumerable;\n                columnDescriptor.get || (columnDescriptor.get = this._bindGetter(columnIndex));\n                Object.defineProperty(proto, columnIndex, columnDescriptor);\n            }\n            columnDescriptor.get = null as any;\n        });\n\n        this.rowPrototype = proto;\n    }\n\n    private _bindGetter(columnIndex: number) {\n        return function(this: Row<T>) {\n            const child = this[kParent].getChildAt(columnIndex);\n            return child ? child.get(this[kRowIndex]) : null;\n        };\n    }\n    public bind(rowIndex: number) {\n        const bound: Row<T> = Object.create(this.rowPrototype);\n        bound[kRowIndex] = rowIndex;\n        return bound;\n    }\n}\n"]}