{"version":3,"sources":["vector/date.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,+DAA+D;AAC/D,wDAAwD;AACxD,6DAA6D;AAC7D,oDAAoD;AACpD,6DAA6D;AAC7D,6DAA6D;AAC7D,EAAE;AACF,+CAA+C;AAC/C,EAAE;AACF,6DAA6D;AAC7D,8DAA8D;AAC9D,yDAAyD;AACzD,4DAA4D;AAC5D,0DAA0D;AAC1D,qBAAqB;AAErB,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AACpC,OAAO,KAAK,OAAO,MAAM,aAAa,CAAC;AACvC,OAAO,EAAS,OAAO,EAAE,eAAe,EAAG,MAAM,SAAS,CAAC;AAE3D,MAAM,OAAO,UAAoC,SAAQ,UAAa;IAClE,kBAAkB;IACX,MAAM,CAAC,IAAI,CAAoC,IAAY,EAAE,OAAkB,QAAQ,CAAC,WAAW;QACtG,QAAQ,IAAI,EAAE;YACV,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACxE,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;aAChF;YACD,KAAK,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACvB,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACxE,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;aACxF;SACJ;QACD,MAAM,IAAI,SAAS,CAAC,2BAA2B,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtE,CAAC;CACJ;AAED,MAAM,OAAO,aAAc,SAAQ,UAAmB;CAAG;AACzD,MAAM,OAAO,qBAAsB,SAAQ,UAA2B;CAAG","file":"date.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { DateUnit } from '../enum';\nimport { BaseVector } from './base';\nimport * as IntUtil from '../util/int';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    /** @nocollapse */\n    public static from<T extends Date_ = DateMillisecond>(data: Date[], unit: T['unit'] = DateUnit.MILLISECOND) {\n        switch (unit) {\n            case DateUnit.DAY: {\n                const values = Int32Array.from(data.map((d) => d.valueOf() / 86400000));\n                return Vector.new(Data.Date(new DateDay(), 0, data.length, 0, null, values));\n            }\n            case DateUnit.MILLISECOND: {\n                const values = IntUtil.Int64.convertArray(data.map((d) => d.valueOf()));\n                return Vector.new(Data.Date(new DateMillisecond(), 0, data.length, 0, null, values));\n            }\n        }\n        throw new TypeError(`Unrecognized date unit \"${DateUnit[unit]}\"`);\n    }\n}\n\nexport class DateDayVector extends DateVector<DateDay> {}\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n"]}